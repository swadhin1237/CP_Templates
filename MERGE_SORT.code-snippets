{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "merge",
		"body": [
"void merge(vector<int>& arr, int l, int mid, int r, int& count)",
"{",
"\tint n=mid-l+1;",
"\tint m=r-mid;",
"\tvector<int> temp1(n), temp2(m);",
"\tfor(int i=l;i<=mid;i++) temp1[i-l]=arr[i];",
"\tfor(int i=mid+1;i<=r;i++) temp2[i-mid-1]=arr[i];",
"\tint i=0, j=0, ind=l;",
"\twhile(i<n && j<m)",
"\t{",
"\t\tif(temp1[i]<temp2[j]) arr[ind++]=temp1[i++];",
"\t\telse ",
"\t\t{",
"\t\t\tarr[ind]=temp2[j];",
"\t\t\tind++;",
"\t\t\tj++;",
"\t\t\tcount+=n-i;//number of pairs satisfying ai >=aj;",
"\t\t}",
"\t}",
"\twhile(i<n) arr[ind++]=temp1[i++];",
"\twhile(j<m) ",
"\t{",
"\t\tarr[ind++]=temp2[j++];",
"\t\t// count+=n;",
"\t}",
"}",
" ",
"void merge_sort(vector<int>& arr, int l, int r, int& count)",
"{",
"\tif(l>=r) return;",
"\tint mid=(l+r)/2;",
"\tmerge_sort(arr, l, mid, count);",
"\tmerge_sort(arr, mid+1, r, count);",
"\tmerge(arr, l, mid, r, count);",
"}"
		],
		"description": "Log output to console"
	}
}